# -*- coding: utf-8 -*-

import re
import asyncio
import logging
import datetime
import pytz

from aiogram import types
from aiogram import executor
from aiogram.dispatcher import filters

from loader import bot, dp, db

GROUP_ID = -1001175586311  # –í–∞—à ID –≥—Ä—É–ø–ø—ã

SPAM_TXT = [
    '–û–û–û', '–ù–î–°', 'https://', 'http://', 't.me/', '–§–∞–ª—å—à', '–ì–∞—Ä–∞–Ω—Ç —Å–∫–∞–º', '–ì–∞—Ä–∞–Ω—Ç –∫–∏–¥–æ–∫', 
    '–ì–∞—Ä–∞–Ω—Ç –∫–∏–¥–∞–ª–æ', '–°—Å—ã–ª–∫–∞ –Ω–∞ —á–∞—Ç', 'www.', 'O–û–û', '–°–∫–∞–º —á–∞—Ç', '—á–∞—Ç —Å–∫–∞–º', '/start', 
    'https://t.me/', 'YouTu.be', '#—ç–∫–æ–Ω–æ–º–∏—è_–≤_–º–∞–≥–∞–∑–∏–Ω–∞—Ö', 'https://t.me', '@lolzteam_garant_bot', 
    '–æ–±–Ω–∞–ª', '–∑–∞–ª–∏–≤', 'scrooge_garantbot', '—ç—Ü–ø', 'covid', '–∫–æ–≤–∏–¥', '–ø—Ä–∏–π–º—É –∑–∞–ª–∏–≤', 'üî• –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω–∞—è —Ä–∞—Å—Å—ã–ª–∫–∞', 
    '–±–∞–∑—ã', '–æ—Ä—É–∂–∏–µ', '—Ñ–∞–ª—å—à–µ–π', '–æ—Ç—Ä–∏—Å–æ–≤–∫–∞', '—Å—Å', 'cc', '@garantbotsa_bot', '@synpro_bot', '@scrooge_garantbot', 
    '–ª—É–∫–æ–π–ª', '–∫–∏–≤–∏', 'qiwi', '–±–µ—Å–ø–ª–∞—Ç–Ω—ã—Ö –∫—É—Ä—Å–æ–≤', '–æ—Ç–∫—Ä—ã—Ç –Ω–∞–±–æ—Ä —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤', 'bot', '—É—Å—Ç–∞–ª —Å–∏–¥–µ—Ç—å –±–µ–∑ –¥–µ–Ω–µ–≥', 
    '–±–∞–∑—É', '—Ñ–∏–∑—ã', '—Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç', '–ø—è—Ç—ë—Ä–æ—á–∫–µ', '–ø—è—Ç–µ—Ä–æ—á–∫–∏', '—Å—Ç–∞–≤–∫–∏', '—Å—Ç–∞–≤–∫–∞–º–∏', '–¥–æ–≥–æ–≤–æ—Ä–Ω—ã–µ –º–∞—Ç—á–∏', '–¥–æ–≥–æ–≤–æ—Ä–Ω–æ–π –º–∞—Ç—á', 
    '@getgarantbot', '.com', 'https:', '@hermesgarantbot', 'lolz.guru', '—Ü–ø', 'elf bar', '@uagarant', '–∏–Ω—Ç–∏–º', '@time_m0ney', 
    '–±–¥', '–±–∞–∑', 'üëâ –Ω–∞–ª–æ–≥–æ–≤–∞—è', '–±–æ–º–±–µ—Ä', '—Å—Ç—Ä–æ–∫–∏', '@bigautopostbot', '–ø–æ—Ä–Ω–æ', '–±–µ—Ç—Ç–∏–Ω–≥', '–ø—Ä–æ–≤–æ–∂—É –Ω–∞–±–æ—Ä –≤ –∫–æ–º–∞–Ω–¥—É', 
    'sports betting', '—Å–∏–≥–∞—Ä–µ—Ç', '–∏–Ω–≤–∞–π—Ç –≤ –≤–∞—à —á–∞—Ç', '–∏–Ω–≥–∞–ª—è—Ç–æ—Ä', '–±–∞–∑–∞', '—Å–ø–æ—Ä—Ç–∏–≤–Ω—ã—Ö —Å–æ–±—ã—Ç–∏–π', '—Å–ø–æ—Ä—Ç —Å–æ–±—ã—Ç–∏—è–º', '@sharkgarant1', 
    '–≥–∏–¥—Ä—ã', '–≥–∏–¥—Ä–∞', '—Ö–æ—á–µ—à—å –º–Ω–æ–≥–æ –¥–µ–Ω–µ–≥', 'bigautopost', 'üî• —Ä–µ–∫–ª–∞–º–∞ –≤ telegram üî•', 'üî•pe–∫–ªa–º–∞ b telegramüî•', 'p–∞cc—ã–ªk–∞ –≤–∞—à–µ–≥–æ –æ–±—ä—è–≤–ª–µ–Ω–∏—è', 
    '@worldwidewebshopbot', '1.–µ—Å–ª–∏ –ø—Ä–∏–Ω–∏–º–∞–µ—Ç–µ –¥–µ–Ω—å–≥–∏', '–∑–∞–ª–∏–≤–∞—é –Ω–∞ –∫–∞—Ä—Ç—ã', '–∑–∞–ª–æ–≥', '–±–æ—Ç:', '–∫–∞—Ä–¥–∏–Ω–≥—É', 'b–æ—Ç', 'üõ†Ô∏è ‚Äñ frostysmm', '_robot', 
    '–ø—Ä–æ–¥–∞–º —Å—Ç—Ä–æ—á–∫–∏', '@abyssxgarantbot', '–º–µ–≥–∞—Ñ–æ–Ω', 'only_temki', '–º—Ñ–æ', '–≥–∏–¥—Ä–æ–π', 'hydra', '–Ω–∞—Ä–∫–æ', 'ramp', '–Ω–∞—Ä–∫–æ—à–æ–ø', '–≥–∏–¥—Ä—É', 
    '–¥–æ–≥–æ–≤–æ—Ä–Ω—è–∫', '–¥–æ–≥–æ–≤–æ—Ä–Ω—è–∫—É'
]


@dp.message_handler(content_types = 'text', chat_id = GROUP_ID)
async def delete_links_and_spam_texts(message: types.Message):
    user_id = message.from_user.id
    db.checkUser(user_id)
    db.add_count(user_id)

    if db.get_count(user_id) <= 3:
        if message.entities:
            for entity in message.entities:  # –ü—Ä–æ–π–¥—ë–º—Å—è –ø–æ –≤—Å–µ–º entities –≤ –ø–æ–∏—Å–∫–∞—Ö —Å—Å—ã–ª–æ–∫
                # url - –æ–±—ã—á–Ω–∞—è —Å—Å—ã–ª–∫–∞, text_link - —Å—Å—ã–ª–∫–∞, —Å–∫—Ä—ã—Ç–∞—è –ø–æ–¥ —Ç–µ–∫—Å—Ç–æ–º
                if entity.type in ["url", "text_link"]:
                    # –ú—ã –º–æ–∂–µ–º –Ω–µ –ø—Ä–æ–≤–µ—Ä—è—Ç—å chat.id, –æ–Ω –ø—Ä–æ–≤–µ—Ä—è–µ—Ç—Å—è –µ—â—ë –≤ —Ö—ç–Ω–¥–ª–µ—Ä–µ
                    await message.delete()

        if any(word in message.text for word in SPAM_TXT):
            print('any')
            await message.delete()

        else:
            regex = (
                r"\w+\n\n"
                r"üì© –°–≤—è–∑—å: @[a-zA-Z0-9_]+\n"
                r"ü§ñ –ì–∞—Ä–∞–Ω—Ç: @[a-zA-Z0-9_]+"
                )

            matches = re.search(regex, message.text, re.MULTILINE)

            if not matches:
                print('not match')
                await message.delete()
                await message.answer(
                    "–í–≤–µ–¥–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —Ñ–æ—Ä–º–∞—Ç–µ:\n\n"

                    "–¢–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ\n\n"

                    "üì© –°–≤—è–∑—å: @username\n" 
                    "ü§ñ –ì–∞—Ä–∞–Ω—Ç: @LookGarantBot"
                    )

    else:
        moscow_time = datetime.datetime.now(pytz.timezone('Europe/Moscow')).strftime('%Y, %m, %d')
        moscow_time = moscow_time.split(',')
        y, m, d = int(moscow_time[0]), int(moscow_time[1]), int(moscow_time[2])
        until_date = datetime.datetime(y, m, d) + datetime.timedelta(days = 1)
        
        db.reset_count(user_id)
        try:
            await bot.restrict_chat_member(
                chat_id = message.chat.id, 
                user_id = message.from_user.id,
                permissions = types.ChatPermissions(
                    can_send_messages = False),
                until_date = until_date
                )
            await message.delete()
            await message.answer(f'@{message.from_user.username}, –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ—Å—Ç–æ–≤ –≤ –¥–µ–Ω—å 3')
        except:
            pass



async def main(dp):
    logging.basicConfig(level=logging.INFO)


if __name__ == '__main__':
    executor.start_polling(dp, on_startup = main)
